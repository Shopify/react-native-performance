"use strict";(self.webpackChunkreact_native_performance=self.webpackChunkreact_native_performance||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome","href":"/react-native-performance/docs/","docId":"welcome"},{"collapsed":true,"type":"category","label":"\ud83d\udee0 Fundamentals","items":[{"type":"link","label":"Getting started","href":"/react-native-performance/docs/fundamentals/getting-started","docId":"fundamentals/getting-started"},{"type":"link","label":"Render Pass Reports","href":"/react-native-performance/docs/fundamentals/render-pass-report","docId":"fundamentals/render-pass-report"},{"type":"link","label":"State Machine","href":"/react-native-performance/docs/fundamentals/state-machine","docId":"fundamentals/state-machine"},{"type":"link","label":"Debugging","href":"/react-native-performance/docs/fundamentals/debugging","docId":"fundamentals/debugging"},{"type":"link","label":"Measuring Render Time","href":"/react-native-performance/docs/fundamentals/measuring-render-times","docId":"fundamentals/measuring-render-times"},{"type":"link","label":"Render Watchdog Timers","href":"/react-native-performance/docs/fundamentals/render-watchdog-timers","docId":"fundamentals/render-watchdog-timers"},{"type":"link","label":"Monitoring Internal State","href":"/react-native-performance/docs/fundamentals/monitoring-internal-state","docId":"fundamentals/monitoring-internal-state"},{"type":"link","label":"Error Handling","href":"/react-native-performance/docs/fundamentals/error-handling","docId":"fundamentals/error-handling"},{"type":"link","label":"Global Enable/Disable Switch","href":"/react-native-performance/docs/fundamentals/global-switch","docId":"fundamentals/global-switch"},{"type":"link","label":"Stubbing the profiler in tests","href":"/react-native-performance/docs/fundamentals/stubbing-in-test","docId":"fundamentals/stubbing-in-test"},{"type":"link","label":"Optimizing Long Running Components","href":"/react-native-performance/docs/fundamentals/optimizing-long-running-components","docId":"fundamentals/optimizing-long-running-components"}],"collapsible":true},{"collapsed":true,"type":"category","label":"\ud83d\udcda Guides","items":[{"type":"link","label":"Lists profiler","href":"/react-native-performance/docs/guides/react-native-performance-lists-profiler","docId":"guides/react-native-performance-lists-profiler"},{"type":"link","label":"Flipper","href":"/react-native-performance/docs/guides/flipper-react-native-performance","docId":"guides/flipper-react-native-performance"},{"collapsed":true,"type":"category","label":"React Navigation","items":[{"type":"link","label":"Getting started","href":"/react-native-performance/docs/guides/react-native-performance-navigation/getting-started","docId":"guides/react-native-performance-navigation/getting-started"},{"type":"link","label":"Simplified Navigation Profiling","href":"/react-native-performance/docs/guides/react-native-performance-navigation/profiling-navigation","docId":"guides/react-native-performance-navigation/profiling-navigation"},{"type":"link","label":"Best practices","href":"/react-native-performance/docs/guides/react-native-performance-navigation/best-practices","docId":"guides/react-native-performance-navigation/best-practices"},{"type":"link","label":"Bottom Tabs","href":"/react-native-performance/docs/guides/react-native-performance-navigation/react-native-performance-navigation-bottom-tabs","docId":"guides/react-native-performance-navigation/react-native-performance-navigation-bottom-tabs"},{"type":"link","label":"Drawer","href":"/react-native-performance/docs/guides/react-native-performance-navigation/react-native-performance-navigation-drawer","docId":"guides/react-native-performance-navigation/react-native-performance-navigation-drawer"}],"collapsible":true},{"type":"link","label":"Errors","href":"/react-native-performance/docs/errors","docId":"guides/errors"}],"collapsible":true},{"collapsed":true,"type":"category","label":"\ud83d\udd17 Resources","items":[{"type":"link","label":"Resources","href":"/react-native-performance/docs/resources","docId":"resources/resources"}],"collapsible":true},{"type":"link","label":"Known issues","href":"/react-native-performance/docs/known-issues","docId":"known-issues"},{"type":"link","label":"FAQ","href":"/react-native-performance/docs/faq","docId":"faq"}]},"docs":{"decisions/data-operations":{"id":"decisions/data-operations","title":"Removal of data operations","description":"Removal of data operations"},"decisions/split-common-operations":{"id":"decisions/split-common-operations","title":"Splitting `react-native-performance-common-operations`","description":"November 11, 2021"},"faq":{"id":"faq","title":"FAQ","description":"Do we need to wrap every screen with ``? Can we somehow auto-inject it for every screen when configuring the react-navigation navigators?","sidebar":"tutorialSidebar"},"fundamentals/debugging":{"id":"fundamentals/debugging","title":"Debugging","description":"Error types","sidebar":"tutorialSidebar"},"fundamentals/error-handling":{"id":"fundamentals/error-handling","title":"Error Handling","description":"The library does a best-effort job of guiding you correct any mistakes that you might make when using the APIs. You can specify how you want to react to these errors if you\'d like:","sidebar":"tutorialSidebar"},"fundamentals/getting-started":{"id":"fundamentals/getting-started","title":"Getting started","description":"Installation","sidebar":"tutorialSidebar"},"fundamentals/global-switch":{"id":"fundamentals/global-switch","title":"Global Enable/Disable Switch","description":"Performance monitoring is a significantly less critical part of your app than providing actual functionality to the end-user. You may discover some issues with your profiler setup in production, or discover bugs in the library (please report them back! \u2764\ufe0f). Ideally, you should\'ve set up a custom errorHandler for monitoring these situations.","sidebar":"tutorialSidebar"},"fundamentals/measuring-render-times":{"id":"fundamentals/measuring-render-times","title":"Measuring Render Time","description":"There are three kinds of render times that you can measure using the library:","sidebar":"tutorialSidebar"},"fundamentals/monitoring-internal-state":{"id":"fundamentals/monitoring-internal-state","title":"Monitoring Internal State","description":"The library internally keeps track of all the profiled screens via a state machine. Although you shouldn\'t need to do this in production, it might be useful to get a dump of these state machine transitions for debugging purposes at development time. You can do so via:","sidebar":"tutorialSidebar"},"fundamentals/optimizing-long-running-components":{"id":"fundamentals/optimizing-long-running-components","title":"Optimizing Long Running Components","description":"The library can only provide you with tripwires that certain screens are not performing as fast as they should. Fixing these issues will need to be done on a case-by-case basis.","sidebar":"tutorialSidebar"},"fundamentals/render-pass-report":{"id":"fundamentals/render-pass-report","title":"Render Pass Reports","description":"The profiler library measures the render times for the various screens in your app. Everytime a profiled screen is rendered, the library will emit its output as an RenderPassReport object. You need to supply an onReportPrepared callback to the PerformanceProfiler component to receive these reports, and do with them as you please. You may console.log these reports, show them in some UI dev tool, or fire them off to a telemetry service.","sidebar":"tutorialSidebar"},"fundamentals/render-watchdog-timers":{"id":"fundamentals/render-watchdog-timers","title":"Render Watchdog Timers","description":"As mentioned in the previous sections, capturing the render-time reports is a two-part process:","sidebar":"tutorialSidebar"},"fundamentals/state-machine":{"id":"fundamentals/state-machine","title":"State Machine","description":"State Machine","sidebar":"tutorialSidebar"},"fundamentals/stubbing-in-test":{"id":"fundamentals/stubbing-in-test","title":"Stubbing the profiler in tests","description":"As mentioned before, you can completely turn off performance profiling by setting the enabled prop to false. You can also use this mechanism to disable profiler in your test environment. Disabling the profiler converts all public APIs into no-ops, ensuring that they have minimal interference with your business logic tests.","sidebar":"tutorialSidebar"},"guides/errors":{"id":"guides/errors","title":"Errors","description":"Inspecting fatal errors","sidebar":"tutorialSidebar"},"guides/flipper-react-native-performance":{"id":"guides/flipper-react-native-performance","title":"Flipper","description":"A Flipper plugin is available to make lists profiling easier. The plugin visualises TTI, blank areas, and its averages.","sidebar":"tutorialSidebar"},"guides/react-native-performance-lists-profiler":{"id":"guides/react-native-performance-lists-profiler","title":"Lists profiler","description":"This library contains components for profiling FlatList.","sidebar":"tutorialSidebar"},"guides/react-native-performance-navigation/best-practices":{"id":"guides/react-native-performance-navigation/best-practices","title":"Best practices","description":"Conditional Rendering","sidebar":"tutorialSidebar"},"guides/react-native-performance-navigation/getting-started":{"id":"guides/react-native-performance-navigation/getting-started","title":"Getting started","description":"@shopify/react-native-performance-navigation package is a companion to the react-native-performance.","sidebar":"tutorialSidebar"},"guides/react-native-performance-navigation/profiling-navigation":{"id":"guides/react-native-performance-navigation/profiling-navigation","title":"Simplified Navigation Profiling","description":"useProfiledNavigation","sidebar":"tutorialSidebar"},"guides/react-native-performance-navigation/react-native-performance-navigation-bottom-tabs":{"id":"guides/react-native-performance-navigation/react-native-performance-navigation-bottom-tabs","title":"Bottom Tabs","description":"Extension library atop @shopify/react-native-performance-navigation with additional helper methods for @react-navigation/bottom-tabs library.","sidebar":"tutorialSidebar"},"guides/react-native-performance-navigation/react-native-performance-navigation-drawer":{"id":"guides/react-native-performance-navigation/react-native-performance-navigation-drawer","title":"Drawer","description":"Extension library atop @shopify/react-native-performance-navigation with additional helper methods for @react-navigation/drawer library.","sidebar":"tutorialSidebar"},"known-issues":{"id":"known-issues","title":"Known issues","description":"initialRouteName","sidebar":"tutorialSidebar"},"resources/resources":{"id":"resources/resources","title":"Resources","description":"Using Apdex to monitor React Native app performance","sidebar":"tutorialSidebar"},"welcome":{"id":"welcome","title":"Welcome","description":"Welcome to React Native Performance \ud83d\udc4b","sidebar":"tutorialSidebar"}}}')}}]);